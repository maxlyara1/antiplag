import ast
import numpy as np

def compare(file1, file2):
    tree1 = ast.parse(open(file1).read())
    tree2 = ast.parse(open(file2).read())

    normalized_code1 = ast.unparse(tree1)
    normalized_code2 = ast.unparse(tree2)

    # Расчеты расстояния Левенштейна
    distance = np.abs(len(normalized_code1) - len(normalized_code2))
    for i in range(len(normalized_code1)):
        if i >= len(normalized_code2):
            distance += 1
        elif normalized_code1[i] != normalized_code2[i]:
            distance += 1

    # Расчет похожести
    score = 1 - distance / max(len(normalized_code1), len(normalized_code2))
    return score

import argparse

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('input_file', help='input file with the list of file pairs')
    parser.add_argument('output_file', help='output file to write the scores')
    args = parser.parse_args()

    # Инпуты и оутпуты
    with open(args.input_file, 'r') as input_file, open(args.output_file, 'w') as output_file:
        for line in input_file:
            file1, file2 = line.strip().split()

            # Расчёт похожести
            score = compare(file1, file2)

            # Результат в файлик
            output_file.write(f'{score}\n')

if __name__ == '__main__':
    main()

